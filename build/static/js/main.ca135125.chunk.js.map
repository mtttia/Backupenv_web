{"version":3,"sources":["util.js","components/AppBar.jsx","asset/img/BackupEnvOnlyIconIconInvert.png","asset/img/lock.png","asset/img/gui.png","components/MyCard.jsx","view/Home.jsx","components/text/Header.jsx","components/text/Subtitle.jsx","view/Tecnology.jsx","view/HowWork.jsx","App.jsx","reportWebVitals.js","palette.js","index.js"],"names":["download","window","location","ButtonAppBar","React","opened","state","setState","toggleDrawer","open","event","type","key","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","color","mr","onClick","Typography","variant","component","Button","Drawer","anchor","onClose","width","role","onKeyDown","List","ListItemLink","to","button","ListItemIcon","pathname","ListItemText","className","primary","ListItem","href","target","props","Link","MyCard","title","text","Home","Welcome","Security","Simple","startIcon","src","ICON","alt","Lock","Gui","Header","icon","Subtitle","Tecnology","fontSize","style","HowWork","textAlign","App","exact","path","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","palette","main","secondary","contrastThreshold","tonalOffset","ReactDOM","render","StrictMode","ThemeProvider","theme","Palette","document","getElementById"],"mappings":"wiBAAO,SAASA,IACdC,OAAOC,SAAW,0F,4BCoBL,SAASC,IACtB,MAA0BC,WAAe,CACvCC,QAAO,IADT,mBAAOC,EAAP,KAAcC,EAAd,KAIMC,EAAe,SAACC,GAAD,OAAU,SAACC,IACX,YAAfA,EAAMC,MAAqC,QAAdD,EAAME,KAA+B,UAAdF,EAAME,MAI9DL,EAAS,2BAAKD,GAAN,IAAaD,OAAQI,OA6C/B,OACI,eAACI,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,GAArB,UACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,KAAK,QACLC,MAAM,UACN,aAAW,OACXR,GAAI,CAAES,GAAI,GACVC,QAAShB,GAAa,GANxB,SAQE,cAAC,IAAD,MAEF,cAACiB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAMb,GAAI,CAAEC,SAAU,GAAzD,wBAGF,cAACa,EAAA,EAAD,CAAQN,MAAM,UAAUE,QAAUxB,EAAlC,2BAGF,cAAC6B,EAAA,EAAD,CACEC,OAAO,OACPrB,KAAMH,EAAK,OACXyB,QAASvB,GAAa,GAHxB,SA7DJ,cAACK,EAAA,EAAD,CACEC,GAAI,CAACkB,MAAO,KACZC,KAAK,eACLT,QAAShB,GAAa,GACtB0B,UAAW1B,GAAa,GAJ1B,SAME,eAAC2B,EAAA,EAAD,WACE,eAACC,EAAD,CAAcC,GAAG,QAAQC,QAAM,EAA/B,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAUjB,MAAmC,SAA5BrB,OAAOC,SAASsC,SAAqB,UAAU,OAElE,cAACC,EAAA,EAAD,CAAcC,UAAW,gBAA8C,SAA5BzC,OAAOC,SAASsC,SAAsB,SAAS,SAAUG,QAAQ,YAE9G,eAACP,EAAD,CAAcC,GAAG,WAAWC,QAAM,EAAlC,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAWjB,MAAmC,YAA5BrB,OAAOC,SAASsC,SAAwB,UAAU,OAEtE,cAACC,EAAA,EAAD,CAAcC,UAAW,gBAA8C,YAA5BzC,OAAOC,SAASsC,SAAwB,SAAS,IAAKG,QAAQ,qBAE3G,eAACP,EAAD,CAAcC,GAAG,aAAaC,QAAM,EAApC,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAajB,MAAmC,cAA5BrB,OAAOC,SAASsC,SAA0B,UAAU,OAE1E,cAACC,EAAA,EAAD,CAAcC,UAAW,gBAA8C,cAA5BzC,OAAOC,SAASsC,SAA0B,SAAS,IAAKG,QAAQ,6BAE7G,eAACC,EAAA,EAAD,CAAUjB,UAAU,IAAIkB,KAAK,uCAAuCC,OAAO,SAASR,QAAM,EAA1F,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACE,EAAA,EAAD,CAAcC,UAAU,cAAcC,QAAQ,2BAEhD,eAACC,EAAA,EAAD,CAAUjB,UAAU,IAAIkB,KAAK,4BAA4BC,OAAO,SAASR,QAAM,EAA/E,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACE,EAAA,EAAD,CAAcC,UAAU,cAAcC,QAAQ,oCAqCxD,SAASP,EAAaW,GACpB,OAAO,cAACH,EAAA,EAAD,aAAUN,QAAM,EAACX,UAAWqB,KAAUD,I,YC5GhC,G,OAAA,IAA0B,yD,kCCA1B,MAA0B,iCCA1B,MAA0B,gC,OCE1B,SAASE,EAAOF,GAC7B,OAAO,sBAAKL,UAAU,UAAf,UACL,oBAAIA,UAAU,WAAd,SAA2BK,EAAMG,QACjC,oBAAIR,UAAU,UACd,mBAAGA,UAAU,UAAb,SAAwBK,EAAMI,U,ICObC,E,4JAEnB,WACE,OAAO,qBAAKV,UAAU,aAAf,SACL,sBAAKA,UAAU,YAAf,UACE,cAACW,EAAD,IACA,qBAAKX,UAAU,oBACf,cAACY,EAAD,IACA,qBAAKZ,UAAU,oBACf,cAACa,EAAD,IACA,qBAAKb,UAAU,6B,GAVWtC,aAgBlC,SAASiD,EAAQN,GACf,OAAM,sBAAKL,UAAU,yBAAf,UACJ,sBAAKA,UAAU,8BAAf,UACE,sBAAKA,UAAU,mBAAf,mBACQ,uBADR,SAGA,cAACd,EAAA,EAAD,CAAQF,QAAQ,YAAYJ,MAAM,UAAUE,QAAUxB,EAAWwD,UAAW,cAAC,IAAD,IAA5E,sBAGA,qBAAKd,UAAU,WACf,cAACd,EAAA,EAAD,CAAQF,QAAQ,WAAWJ,MAAM,UAAUK,UAAWqB,IAAMX,GAAG,WAAWmB,UAAW,cAAC,IAAD,IAArF,8BAIF,qBAAKd,UAAU,8BAAf,SACE,qBAAKe,IAAKC,EAAMC,IAAI,OAAOjB,UAAU,cAK3C,SAASY,EAASP,GAChB,OAAO,sBAAKL,UAAU,MAAf,UACL,qBAAKA,UAAU,WAAf,SACE,qBAAKe,IAAKG,EAAMlB,UAAU,WAAWiB,IAAI,gBAE3C,qBAAKjB,UAAU,WAAf,SACE,cAAC,EAAD,CAAQQ,MAAM,YAAYC,KAAM,CAAC,mFAA6E,uBAAO,iKAA8J,uBAAM,yLAK/R,SAASI,EAAOR,GACd,OAAO,sBAAKL,UAAU,MAAf,UACL,qBAAKA,UAAU,mBAAf,SACE,qBAAKe,IAAKI,EAAKnB,UAAU,OAAOiB,IAAI,oBAEtC,qBAAKjB,UAAU,mBAAf,SACE,cAAC,EAAD,CAAQQ,MAAM,wBAAwBC,KAAM,CAAC,+JAAyJ,uBAAO,sHAAmH,uBAAM,0J,cChE7T,SAASW,EAAOf,GAC3B,OAAQ,gCACJ,sBAAKL,UAAU,iBAAf,UACI,qBAAKA,UAAU,SAAf,SACI,mBAAGA,UAAU,SAAb,SAAuBK,EAAMI,SAEjC,qBAAKT,UAAU,QAAf,SACKK,EAAMgB,UAGf,oBAAIrB,UAAU,iB,OCVP,SAASsB,EAASjB,GAC7B,OACI,8BACI,mBAAGL,UAAU,WAAb,SAAyBK,EAAMI,S,cCGtBc,G,4JACnB,WACE,OAAO,qBAAKvB,UAAU,QAAf,SACL,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAQS,KAAK,yBAAyBY,KAAM,CAAC,cAAC,IAAD,CAAazC,MAAM,UAAUR,GAAI,CAAEoD,SAAU,IAAMC,MAAO,CAAC,UAAa,aACrH,iJAC4G,cAACnB,GAAA,EAAD,CAAMH,KAAK,8BAAX,yBAE5G,cAAC,EAAD,CAAUM,KAAK,aACf,uLAGA,cAAC,EAAD,CAAUA,KAAK,mBACf,wIAGA,cAAC,EAAD,CAAUA,KAAK,cACf,uHAGA,cAAC,EAAD,CAAUA,KAAK,cACf,0I,GArB+B/C,aCDlBgE,I,mKACnB,WACE,OAAO,qBAAK1B,UAAU,QAAf,SACL,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAQS,KAAK,gBAAgBY,KAAM,CAAC,cAAC,IAAD,CAAezC,MAAM,UAAUR,GAAI,CAAEoD,SAAU,IAAMC,MAAO,CAAC,UAAa,aAC9G,oBAAGA,MAAO,CAACE,UAAU,WAArB,kLACuK,uBADvK,mHAE4G,uBAF5G,kHAKA,cAAC,EAAD,CAAUlB,KAAK,wBACf,gPACwM,uBADxM,8IAIA,cAAC,EAAD,CAAUA,KAAK,2BACf,iV,GAhB6B/C,cCK/BkE,G,4JACJ,WACE,OACE,cAAC,IAAD,UACE,sBAAK5B,UAAU,YAAf,UACE,8BACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,QAAf,SAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUnC,GAAG,YAEf,cAAC,IAAD,CAAOmC,KAAK,QAAQ7C,UAAWyB,IAC/B,cAAC,IAAD,CAAOoB,KAAK,WAAW7C,UAAWyC,KAClC,cAAC,IAAD,CAAOI,KAAK,aAAa7C,UAAWsC,mB,GAhBhCQ,aAyBHH,MCzBAI,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mBCLCQ,gBAAY,CACzBC,QAAS,CACPzC,QAAS,CAEP0C,KAAM,WAIRC,UAAW,CACTD,KAAM,WAIRE,kBAAmB,EAInBC,YAAa,MCRjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAACC,GAAA,EAAD,CAAeC,MAAOC,GAAtB,SACE,cAAC,GAAD,QAIJC,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.ca135125.chunk.js","sourcesContent":["export function download() {\r\n  window.location = 'https://github.com/mtttia/backup_env/releases/download/1.0.0/backup_env-1.0.0.Setup.exe'\r\n}","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport HomeIcon from '@mui/icons-material/Home'\r\nimport GavelIcon from '@mui/icons-material/Gavel';\r\nimport BiotechIcon from '@mui/icons-material/Biotech';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport { download } from './../util'\r\nimport { Link } from 'react-router-dom';\r\nimport './AppBar.scss'\r\n\r\nexport default function ButtonAppBar() {\r\n  const [state, setState] = React.useState({\r\n    opened:false\r\n  });\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, opened: open });\r\n  };\r\n\r\n  const list = () => (\r\n    <Box\r\n      sx={{width: 250 }}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(false)}\r\n      onKeyDown={toggleDrawer(false)}\r\n    >\r\n      <List>\r\n        <ListItemLink to=\"/home\" button>\r\n          <ListItemIcon>\r\n            <HomeIcon color={window.location.pathname == '/home'? 'primary':''} />\r\n          </ListItemIcon>\r\n          <ListItemText className={\"link-in-nav \" + (window.location.pathname == '/home' ? 'linked':'MERDA')} primary=\"Home\"/>          \r\n        </ListItemLink>\r\n        <ListItemLink to=\"/howWork\" button>\r\n          <ListItemIcon>\r\n            <GavelIcon color={window.location.pathname == '/howWork'? 'primary':''}/>\r\n          </ListItemIcon>\r\n          <ListItemText className={\"link-in-nav \" + (window.location.pathname == '/howWork'? 'linked':'')} primary=\"Come funziona\"/>          \r\n        </ListItemLink>\r\n        <ListItemLink to=\"/tecnology\" button>\r\n          <ListItemIcon>\r\n            <BiotechIcon color={window.location.pathname == '/tecnology'? 'primary':''}/>\r\n          </ListItemIcon>\r\n          <ListItemText className={\"link-in-nav \" + (window.location.pathname == '/tecnology'? 'linked':'')} primary=\"Tecnologie utilizzate\"/>  \r\n        </ListItemLink>\r\n        <ListItem component=\"a\" href=\"https://github.com/mtttia/backup_env\" target=\"_black\" button>\r\n          <ListItemIcon>\r\n            <GitHubIcon />\r\n          </ListItemIcon>\r\n          <ListItemText className=\"link-in-nav\" primary=\"Github del progetto\"/>          \r\n        </ListItem>\r\n        <ListItem component=\"a\" href=\"https://github.com/mtttia\" target=\"_black\" button>\r\n          <ListItemIcon>\r\n            <GitHubIcon />\r\n          </ListItemIcon>\r\n          <ListItemText className=\"link-in-nav\" primary=\"Github dell'autore\"/>\r\n        </ListItem>\r\n        \r\n      </List>\r\n    </Box>\r\n  );\r\n  return (    \r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              sx={{ mr: 2 }}\r\n              onClick={toggleDrawer(true)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n              Backup Env\r\n            </Typography>\r\n          <Button color=\"inherit\" onClick={ download }>Download</Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          anchor='left'\r\n          open={state['opened']}\r\n          onClose={toggleDrawer(false)}\r\n        >\r\n          {list()}\r\n        </Drawer>\r\n      </Box>    \r\n  );\r\n}\r\n\r\nfunction ListItemLink(props) {\r\n  return <ListItem button component={Link} {...props} />;\r\n}","export default __webpack_public_path__ + \"static/media/BackupEnvOnlyIconIconInvert.0408f79b.png\";","export default __webpack_public_path__ + \"static/media/lock.326a07ad.png\";","export default __webpack_public_path__ + \"static/media/gui.c6c53443.png\";","import './MyCard.scss'\r\n\r\nexport default function MyCard(props) {\r\n  return <div className='mc-back'>\r\n    <h1 className='mc-title'>{ props.title }</h1>\r\n    <hr className='mc-hr' />\r\n    <p className=\"mc-text\">{props.text}</p>\r\n  </div>\r\n}","import * as React from 'react';\r\nimport './../style/custom.scss'\r\nimport './home.scss'\r\nimport ICON from './../asset/img/BackupEnvOnlyIconIconInvert.png'\r\nimport Button from '@mui/material/Button';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\r\nimport { download } from '../util';\r\nimport Lock from './../asset/img/lock.png'\r\nimport Gui from './../asset/img/gui.png'\r\nimport MyCard from '../components/MyCard';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Home extends React.Component{\r\n\r\n  render() {\r\n    return <div className=\"home h-max\">\r\n      <div className=\"container\">\r\n        <Welcome />\r\n        <div className=\"spacer-vertical\"></div>\r\n        <Security />\r\n        <div className=\"spacer-vertical\"></div>\r\n        <Simple />\r\n        <div className=\"spacer-vertical\"></div>\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\nfunction Welcome(props) {\r\n  return<div className=\"row home-section-first\">\r\n    <div className=\"col-md-6 order-1 order-md-0\">\r\n      <div className=\"home-style-write\">\r\n        BACKUP<br/>ENV\r\n      </div>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={ download } startIcon={<DownloadIcon />}>\r\n        Download\r\n      </Button>\r\n      <div className='spacer'></div>\r\n      <Button variant=\"outlined\" color=\"primary\" component={Link} to=\"/howWork\" startIcon={<LightbulbIcon />}>\r\n        Come funziona\r\n      </Button>\r\n    </div>\r\n    <div className=\"col-md-6 order-md-1 order-0\">\r\n      <img src={ICON} alt='icon' className='icon'/>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nfunction Security(props) {\r\n  return <div className=\"row\">\r\n    <div className=\"col-md-4\">\r\n      <img src={Lock} className='par-icon' alt='lock icon' />\r\n    </div>\r\n    <div className=\"col-md-8\">\r\n      <MyCard title=\"Sicurezza\" text={[\"Il codice di quest'app è open source, può quindi essere letto da chiunque.\",<br/>, \"L'app non trasmette nessun dato ad applicazioni di terze parti, questo è confermato dal funzionamento dell'app anche in assenza di connessione ad internet.\",<br/>,\"Ogni volta che l'app andrà in errore per qualsiasi motivo, anche ad app chiusa l'utente verrà avvisato attraverso una finestra che spiega l'errore ed il come sistemarlo\"]} />\r\n    </div>\r\n  </div>\r\n}\r\n\r\nfunction Simple(props) {\r\n  return <div className=\"row\">\r\n    <div className=\"col-md-4 order-1\">\r\n      <img src={Gui} className='icon' alt='Gui interface' />\r\n    </div>\r\n    <div className=\"col-md-8 order-0\">\r\n      <MyCard title=\"Semplice ed Intuitiva\" text={[\"La configurazione del backup è chiara semplice e soprattutto guidata, viene chiesta appena aperta l'app e potrà essere modificata in qualsiasi momento\",<br/>, \"L'interfaccia dell'app è semplice e minimale, con una barra di stato che dice a primo impatto come va coi backup\",<br/>,\"La gestione degli errori è guidata, ovvero ogni volta che si verifica un errore, l'utente verrà avvisato e verrà detto come risolverlo\"]} />\r\n    </div>\r\n  </div>\r\n}\r\n","import './Header.scss';\r\n\r\nexport default function Header(props){\r\n    return (<div>\r\n        <div className=\"row header-row\">\r\n            <div className=\"col-10\">\r\n                <p className=\"header\">{props.text}</p>\r\n            </div>\r\n            <div className=\"col-2\">\r\n                {props.icon}\r\n            </div>\r\n        </div>\r\n        <hr className=\"header-hr\" />\r\n    </div>)\r\n}\r\n","import './Subtitle.scss';\r\n\r\nexport default function Subtitle(props){\r\n    return (\r\n        <div>\r\n            <p className=\"subtitle\">{props.text}</p>\r\n        </div>\r\n    )\r\n}","import * as React from 'react';\r\nimport './../style/custom.scss'\r\nimport './Tecnology.scss'\r\nimport Header from '../components/text/Header';\r\nimport Subtitle from '../components/text/Subtitle';\r\nimport BiotechIcon from '@mui/icons-material/Biotech';\r\nimport Link from '@mui/material/Link';\r\n\r\nexport default class Tecnology extends React.Component{\r\n  render() {\r\n    return <div className=\"h-max\">\r\n      <div className=\"container\">\r\n        <Header text=\"Teconologie utilizzate\" icon={[<BiotechIcon color=\"primary\" sx={{ fontSize: 40 }} style={{'marginTop': '20px'}} />]} />\r\n        <p>\r\n          Per creare quest'app sono state utilizzate diverse tecnologie tra le quali la più importante e centrale è <Link href=\"https://www.electronjs.org/\" >Electron</Link>\r\n        </p>\r\n        <Subtitle text=\"Electron\" />\r\n        <p>\r\n          &Egrave; il cuore dell'app, consiste in un framework che permette di create applicazioni cross-platform con le tecnologie del web unendo Nodejs e Chromium\r\n        </p>\r\n        <Subtitle text=\"Electron-forge\" />\r\n        <p>\r\n          Preconfigura il framework electron con valori di default per rendere più veloce lo sviluppo dell'app\r\n        </p>\r\n        <Subtitle text=\"Bootstrap\" />\r\n        <p>\r\n          Bootstrap è un framework css che permette una gestione della grafica molto semplice\r\n        </p>\r\n        <Subtitle text=\"Node-cron\" />\r\n        <p>\r\n          Pacchetto npm che permette di eseguire script regolarmente come fossero cron-job in ambito linux\r\n        </p>\r\n      </div>\r\n    </div>\r\n  }\r\n}","import * as React from 'react';\r\nimport './../style/custom.scss'\r\nimport './HowWork.scss'\r\nimport Header from '../components/text/Header';\r\nimport Subtitle from '../components/text/Subtitle';\r\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\r\n\r\nexport default class HowWork extends React.Component{\r\n  render() {\r\n    return <div className=\"h-max\">\r\n      <div className=\"container\">\r\n        <Header text=\"Come funziona\" icon={[<LightbulbIcon color=\"primary\" sx={{ fontSize: 40 }} style={{'marginTop': '20px'}} />]}/>\r\n        <p style={{textAlign:'justify'}}>\r\n          Backup env lavora con 2 componenti che scambiano dati tra di lor in maniera automantica per garantire un pacchetto preconfezionato adatto a qualsiasi tipo di utente.<br />\r\n          I componenti sono l'interfaccia grafica ed il programma che esegue i backup ogni volta che c'è nè bisogno.<br />\r\n          Grazie alla collaborazione tra questi due programmi, l'utente si accorgerà solo dell'interfaccia grafica.\r\n        </p>\r\n        <Subtitle text=\"Interfaccia grafica\" />\r\n        <p>\r\n          L'interfaccia grafica è la finestra con la quale l'utente potrà gestire il 100% del backup grazie alla sua collaborazione con l'app che in realtà esegue il backup che viene eseguita in background.  <br />\r\n          Da questa finestra si possono avviare nuovi backup, modificare la configurazione e vedere sempre lo satato dell'app che esegue il backup\r\n        </p>\r\n        <Subtitle text=\"processo in background\" />\r\n        <p>\r\n          Il processo che viene eseguito in background è quello che ha il codice per effettuare il backup, dice all'interfaccia grafica il suo stato ogni volta che sarà necessario in modo che l'utente abbia una visione sempre aggiornata su questo processo che è la vera parte importante dell'app.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  }\r\n}","import { Component } from 'react'\r\nimport AppBar from './components/AppBar'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Home from './view/Home'\r\nimport Tecnology from './view/Tecnology'\r\nimport HowWork from './view/HowWork'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App h-max\">\r\n          <nav>\r\n            <AppBar />\r\n          </nav>\r\n          <div className='h-max'>\r\n            \r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Redirect to=\"/home\"></Redirect>\r\n              </Route>  \r\n              <Route path=\"/home\" component={Home} />\r\n              <Route path=\"/howWork\" component={HowWork} />\r\n              <Route path=\"/tecnology\" component={Tecnology} />\r\n            </Switch>            \r\n          </div>\r\n        </div>\r\n      </Router>\r\n  );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createTheme } from '@mui/material/styles';\r\n\r\nexport default createTheme({\r\n  palette: {\r\n    primary: {\r\n      // light: will be calculated from palette.primary.main,\r\n      main: '#006D77',\r\n      // dark: will be calculated from palette.primary.main,\r\n      // contrastText: will be calculated to contrast with palette.primary.main\r\n    },\r\n    secondary: {\r\n      main: '#83C5BE',\r\n    },\r\n    // Used by `getContrastText()` to maximize the contrast between\r\n    // the background and the text.\r\n    contrastThreshold: 3,\r\n    // Used by the functions below to shift a color's luminance by approximately\r\n    // two indexes within its tonal palette.\r\n    // E.g., shift from Red 500 to Red 300 or Red 700.\r\n    tonalOffset: 0.2,\r\n  },\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport './style/custom.scss'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport Palette from './palette'\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    \r\n    <ThemeProvider theme={Palette}>\r\n      <App />\r\n    </ThemeProvider>      \r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}